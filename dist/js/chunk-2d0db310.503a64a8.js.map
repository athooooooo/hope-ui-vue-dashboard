{"version":3,"sources":["webpack:///./src/plugins/countdown/countdown.js"],"names":["getTimeRemaining","endtime","total","Date","parse","seconds","Math","floor","minutes","hours","days","initializeClock","elem","clock","document","querySelector","daysSpan","hoursSpan","minutesSpan","secondsSpan","updateClock","t","innerHTML","slice","clearInterval","timeinterval","setInterval","time","getAttribute","undefined","deadline"],"mappings":"qGAAA,SAASA,EAAkBC,GACzB,IAAMC,EAAQC,KAAKC,MAAMH,GAAWE,KAAKC,MAAM,IAAID,MAC7CE,EAAUC,KAAKC,MAAOL,EAAQ,IAAQ,IACtCM,EAAUF,KAAKC,MAAOL,EAAQ,IAAO,GAAM,IAC3CO,EAAQH,KAAKC,MAAOL,EAAQ,KAAoB,IAChDQ,EAAOJ,KAAKC,MAAML,EAAQ,OAEhC,MAAO,CACLA,QACAQ,OACAD,QACAD,UACAH,WAIJ,SAASM,EAAiBC,EAAMX,GAC9B,IAAMY,EAAQC,SAASC,cAAcH,GAC/BI,EAAWH,EAAME,cAAc,eAC/BE,EAAYJ,EAAME,cAAc,gBAChCG,EAAcL,EAAME,cAAc,kBAClCI,EAAcN,EAAME,cAAc,kBAExC,SAASK,IACP,IAAMC,EAAIrB,EAAiBC,GAE3Be,EAASM,UAAYD,EAAEX,KACvBO,EAAUK,WAAa,IAAMD,EAAEZ,OAAOc,OAAO,GAC7CL,EAAYI,WAAa,IAAMD,EAAEb,SAASe,OAAO,GACjDJ,EAAYG,WAAa,IAAMD,EAAEhB,SAASkB,OAAO,GAE7CF,EAAEnB,OAAS,GACbsB,cAAcC,GAIlBL,IACA,IAAMK,EAAeC,YAAYN,EAAa,K,UAGhD,IAAIO,EAAOb,SAASC,cAAc,cAAca,aAAa,kBAChDC,IAATF,IACFA,EAAOxB,KAAKC,MAAM,IAAID,MAAU,QAElC,IAAM2B,EAAW,IAAI3B,KAAKwB,GAC1BhB,EAAgB,aAAcmB","file":"js/chunk-2d0db310.503a64a8.js","sourcesContent":["function getTimeRemaining (endtime) {\r\n  const total = Date.parse(endtime) - Date.parse(new Date())\r\n  const seconds = Math.floor((total / 1000) % 60)\r\n  const minutes = Math.floor((total / 1000 / 60) % 60)\r\n  const hours = Math.floor((total / (1000 * 60 * 60)) % 24)\r\n  const days = Math.floor(total / (1000 * 60 * 60 * 24))\r\n\r\n  return {\r\n    total,\r\n    days,\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  }\r\n}\r\n\r\nfunction initializeClock (elem, endtime) {\r\n  const clock = document.querySelector(elem)\r\n  const daysSpan = clock.querySelector('[data-days]')\r\n  const hoursSpan = clock.querySelector('[data-hours]')\r\n  const minutesSpan = clock.querySelector('[data-minutes]')\r\n  const secondsSpan = clock.querySelector('[data-seconds]')\r\n\r\n  function updateClock () {\r\n    const t = getTimeRemaining(endtime)\r\n\r\n    daysSpan.innerHTML = t.days\r\n    hoursSpan.innerHTML = ('0' + t.hours).slice(-2)\r\n    minutesSpan.innerHTML = ('0' + t.minutes).slice(-2)\r\n    secondsSpan.innerHTML = ('0' + t.seconds).slice(-2)\r\n\r\n    if (t.total <= 0) {\r\n      clearInterval(timeinterval)\r\n    }\r\n  }\r\n\r\n  updateClock()\r\n  const timeinterval = setInterval(updateClock, 1000)\r\n}\r\n\r\nlet time = document.querySelector('.countdown').getAttribute('data-date')\r\nif (time === undefined) {\r\n  time = Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000\r\n}\r\nconst deadline = new Date(time)\r\ninitializeClock('.countdown', deadline)\r\n"],"sourceRoot":""}